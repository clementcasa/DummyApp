plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
}
apply from: "$rootDir/jacoco.gradle"

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.dummyapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.citygoo.app.HiltRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation":"$projectDir/schemas".toString(),
                    "room.incremental":"true",
                    "room.expandProjection":"true"
                ]
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
            "-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi"
        ]
    }
    testOptions {
        unitTests {
            all {
                jvmArgs '-noverify'
                jacoco {
                    includeNoLocationClasses true
                    excludes = ['jdk.internal.*']
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "DummyApp"
            buildConfigField "String", "API_APP_ID", "\"618904a727e0da3d24dd7d3d\""
            buildConfigField "String", "BASE_URL", "\"https://dummyapi.io/\""
            buildConfigField "String", "BUILD_CONFIG", "\"${releaseEnvironment}\""
        }
        debug {
            debuggable = true
            applicationIdSuffix = '.dev'
            resValue "string", "app_name", "DummyApp-Dev"
            buildConfigField "String", "API_APP_ID", "\"618904a727e0da3d24dd7d3d\""
            buildConfigField "String", "BASE_URL", "\"https://dummyapi.io/\""
            buildConfigField "String", "BUILD_CONFIG", "\"${devEnvironment}\""
        }
    }

    flavorDimensions 'version'
    productFlavors {
        real {
            dimension = 'version'
        }
        mock {
            dimension = 'version'
        }
    }
    // enable mock only for dev
    variantFilter { variant ->
        def versionFlavor = variant.getFlavors().get(0).name
        def env = variant.buildType.name
        if ((env == "debug" && versionFlavor == "mock") || versionFlavor == "real") {
            setIgnore(false)
        } else {
            setIgnore(true)
        }
    }
}

dependencies {
    def lifecycle_version = "2.4.0"
    def mockito_version = "4.0.0"
    def room_version = "2.3.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0'

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    kapt "androidx.room:room-compiler:2.3.0"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.test:core:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
}

kapt {
    correctErrorTypes true
}

configurations.all {
    resolutionStrategy {
        resolutionStrategy {
            force "com.squareup.okhttp3:okhttp:4.9.1"
        }
    }
}

/*
//TO BE REMOVED WHEN HILT ISSUE IS FIXED: https://github.com/google/dagger/issues/2744
tasks.named("getDependencies").configure { task ->
    def configured = false
    project.android.applicationVariants.all {
        if (!configured) {
            task.inputs.files(project.files(project.configurations.getByName("mockDebugAndroidTestRuntimeClasspath")))
            task.inputs.files(project.files(project.configurations.getByName("realDebugAndroidTestRuntimeClasspath")))
            configured = true
        }
    }
}
 */